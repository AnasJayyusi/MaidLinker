@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    string cultureCode = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    string direction = cultureCode.StartsWith("ar", StringComparison.OrdinalIgnoreCase) ? "rtl" : "ltr";
    string textAlign = direction == "rtl" ? "right" : "left";
    bool isEng = direction == "ltr" ? true : false;
    string marginValue = isEng ? "margin-left" : "margin-right";
    string closeButtonValue = isEng ? "0" : "1%";
    string footerButtonsValue = isEng ? "0px" : "5px";
    string sendReviewValue = isEng ? "0" : "88%";
    string currentPath = Context.Request.Path.ToString().ToLower();
}



<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">


<style>
    .wide-button {
        width: 150px; /* Set the desired width for the button */
        width: 100px;
    }

    .text-black {
        color: black;
    }
    /* attachment Icon */
    .pdf-link .far.fa-file-pdf {
        color: red;
    }

    .pptx-link .far.fa-file-powerpoint {
        color: orange;
    }

    .docx-link .far.fa-file-word {
        color: blue;
    }

    #certifications-list a {
        font-family: "Helvetica", Arial, sans-serif;
    }

    .toast {
        margin-top: 50px !important;
    }

    .toast-success {
        background-color: #00333f;
    }

    .drop-container {
        position: relative;
        display: flex;
        gap: 10px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 200px;
        padding: 20px;
        border-radius: 10px;
        border: 2px dashed #555;
        color: #444;
        cursor: pointer;
        transition: background .2s ease-in-out, border .2s ease-in-out;
    }

        .drop-container:hover {
            background: #eee;
            border-color: #111;
        }

            .drop-container:hover .drop-title {
                color: #222;
            }

    .drop-title {
        color: #444;
        font-size: 20px;
        font-weight: bold;
        text-align: center;
        transition: color .2s ease-in-out;
    }

    input[type=file] {
        width: 350px;
        max-width: 100%;
        color: #444;
        padding: 5px;
        background: #fff;
        border-radius: 10px;
        border: 1px solid #555;
    }

        input[type=file]::file-selector-button {
            margin-right: 20px;
            border: none;
            background: #5F7AE7;
            padding: 10px 20px;
            border-radius: 10px;
            color: #fff;
            cursor: pointer;
            transition: background .2s ease-in-out;
        }

            input[type=file]::file-selector-button:hover {
                background: #0d45a5;
            }
</style>
<!-- OverView -->
<div id="tab1" class="tab-content" style="color:#5F7AE7">
    <div style="text-align: end; cursor:pointer">
        <button onclick="getFullUserProfileInfo()" type="button" class="btn btn-primary  add-edit-btn" data-toggle="modal" data-target="#EditProfileModal">
            <i style="font-size:22px" class="fas fa-edit"></i>  @Localizer["EditProfile"]
        </button>
    </div>
    <table cellpadding="10">
        <tr>
            <td>
                <img id="user-image" style="border-radius:30%" src="~/users/images/Default-User-Profile.jpg" width="150" height="150" />
            </td>
            <td>
                @Localizer["Welcome"]
                <h4 id="fullname-label" style="font-weight:bold"></h4>
            </td>


        </tr>
        <tr>
            <td>
                <i class="fa fa-hospital-o" aria-hidden="true"></i>
                <label style="font-weight:bold">@Localizer["NumberPatients"]</label>   <span id="number-patients-label" style="color:black"></span>
            </td>

            <td>
                <img src="~/icon/Doctor/shield-icon.png" width="25" height="25" />
                <label style="font-weight:bold">@Localizer["InsuranceAccept"] </label>  <span id="insurance-label" style="color:black"></span>
            </td>

            <td>
                <i class="fa fa-star" aria-hidden="true"></i>
                <label style="font-weight:bold">@Localizer["Reviews"] </label> <img src="~/icon/Doctor/review-icon.png" width="25" height="25" />
                <span id="review-label" style="color:black"></span>
            </td>

        </tr>
    </table>
    <hr>

    <div style="padding-left:5%;padding-right:5%">
        <div class="row mt-4">
            <div class="col-md-12">
                <h5 class="font-weight-bold">@Localizer["Bio"]</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <span id="bio-label" class="text-black"></span>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-md-12">
                <h5 class="font-weight-bold">@Localizer["Speciality"]</h5>
                <span id="speciality-label" class="text-black"></span>
                <ul id="listSpeciality"></ul>
            </div>
        </div>
        <div class="row">
            <div class=" row mt-4 col-md-5" id="certifications-div">
                <div>
                    <h5 class="font-weight-bold">@Localizer["Certifications"]</h5>
                    <span id="certifications-label" class="text-black"></span>
                    <button onclick="getDegrees()" type="button" class="btn btn-primary wide-button  add-edit-btn" data-toggle="modal" data-target="#AttachCertificationsModal">
                        <i onclick="getDegrees()" class="fa fa-upload" aria-hidden="true"></i> @Localizer["Attach"]
                    </button>
                </div>
            </div>
            <div class="row mt-4 col-md-7" id="requiredAttachments-div">
                <div>
                    <h5 class="font-weight-bold">@Localizer["Required Attachments"]</h5>
                    <span id="requiredAttachments-label" class="text-black">You have to add all required attahments</span>
                    <button id="requiredAttachBtn" type="button" class="btn btn-danger wide-button  add-edit-btn" data-toggle="modal" data-target="#RequiredAttachmentsModal">
                        <i class="fa fa-upload" aria-hidden="true"></i> @Localizer["Attach"]
                    </button>
                </div>
            </div>
        </div>
        <br />

        <div class="row mt-3">
            <div class="col-md-12">
                <div id="certifications-container">
                    <table id="certifications-table" class="table">
                        <thead>
                            <tr>
                                <th>@Localizer["Degree"]</th>
                                <th>@Localizer["UniversityName"]</th>
                                <th>@Localizer["CertificationsFile"]</th>
                                <th>@Localizer["Actions"]</th>
                            </tr>
                        </thead>
                        <tbody id="certifications-list"></tbody>
                    </table>
                    <p id="certifications-label"></p>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="active-profile-sign" style="margin-right:@sendReviewValue" onclick=sendToReview() class="send-review-btn">
    <i id="send-icon" style="color:white;@marginValue:10px" class="fa fa-paper-plane" aria-hidden="true"></i>
    <div class="container">
        <div class="tick"></div>
    </div>
</div>



<!------------------------------ Edit User Profile -------------------->
<div class="modal fade" id="EditProfileModal" tabindex="-1" role="dialog" aria-labelledby="EditUserProfileModal" aria-hidden="true">
    <div class="modal-dialog custom-modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditUserProfileModal">@Localizer["EditProfile"]</h5>
                <button type="button" style="margin-left:@closeButtonValue" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <!-- Add your modal content here -->
                    <table cellpadding="10">

                        <tr>
                            <td>
                                <label for="image-upload">
                                    <img title="Click here to upload new image" id="user-image-edit" style="cursor: pointer;border-radius:30% " src="~/users/images/Default-User-Profile.jpg" id="preview-image" width="150" height="150" />
                                </label>
                                <input type="file" accept="image/*" id="image-upload" onchange="loadImage(event)" style="display: none;" />
                            </td>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="full-name-edit-input">@Localizer["FullName"]</label>
                                    <input type="text" class="form-control" id="full-name-edit-input" required>
                                </div>

                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="bio-edit-input">@Localizer["Bio"]</label>
                                    <textarea placeholder="@Localizer["NoBio"]" rows="4" cols="50" type="text" class="form-control" id="bio-edit-input" required></textarea>
                                </div>
                            </td>
                        </tr>
                        <tr>

                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="accountTypes-ddl-edit">@Localizer["AccountType"]</label>
                                    <select disabled class="form-control" id="accountTypes-ddl-edit"></select>
                                </div>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="practitionerTypes-ddl-edit">@Localizer["PractitionerType"]</label>
                                    <select disabled class="form-control" id="practitionerTypes-ddl-edit"></select>
                                </div>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="phone-edit-input">@Localizer["Phone"]</label>
                                    <input disabled type="text" class="form-control" id="phone-edit-input" value="Test" required>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="email-edit-input">@Localizer["Email"]</label>
                                    <input disabled type="text" class="form-control" id="email-edit-input" value="Test" required>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="professionalRanks-ddl-edit">@Localizer["ProfessionalRank"]</label>
                                    <select class="form-control" id="professionalRanks-ddl-edit">
                                        <option value="">@Localizer["SelectProfessionalRank"] </option>
                                    </select>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="countries-ddl-edit">@Localizer["Country"]</label>
                                    <select class="form-control" id="countries-ddl-edit" onchange="getStatesUserProfile(this.value)">
                                        <option value="">@Localizer["SelectCountry"]</option>
                                    </select>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="states-ddl-edit">@Localizer["State"]</label>
                                    <select class="form-control" id="states-ddl-edit" onchange="getCitesUserProfile(this.value)">
                                        <option value="">@Localizer["Select a State"]</option>
                                    </select>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="cities-ddl-edit">@Localizer["City"]</label>
                                    <select class="form-control" id="cities-ddl-edit">
                                        <option value="">@Localizer["SelectCity"]</option>
                                    </select>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan="2">
                                <div class="form-group">
                                    <label style="font-weight:bold;color:#5F7AE7" for="speciality-edit-multiSelect"> @Localizer["Speciality"]</label>
                                    <div>
                                        <div>
                                            @*  <select id="speciality-edit-multiSelect" multiple>
                                            </select>
                                            *@
                                            <select class="speciality-edit-multiSelect" name="specialties[]" multiple="multiple">
                                            </select>
                                        </div>
                                    </div>
                                </div>


                            </td>

                        </tr>


                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" style="margin:5px;" id="close-overview">@Localizer["Cancel"]</button>
                <button onclick="updateProfile()" type="button" class="btn btn-success" style="background-color:#5F7AE7">@Localizer["Update"]</button>
            </div>
        </div>
    </div>
</div>





<!------------------------------ Certifications Model -------------------->

<div class="modal fade" id="AttachCertificationsModal" tabindex="-1" role="dialog" aria-labelledby="AttachCertificationsModal" aria-hidden="true">
    <div class="modal-dialog custom-modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AttachCertificationsModal"> @Localizer["AttachCertifications"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <!-- Add your modal content here -->

                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="degrees-ddl" style="font-weight:bold;color:#5F7AE7">@Localizer["Degree"]</label>
                            <select id="degrees-ddl" name="degrees-ddl" class="form-control" required>
                                <option value="">@Localizer["SelectDegree"]</option>
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="universityName-english" style="font-weight:bold;color:#5F7AE7">@Localizer["UniversityEnglish"]</label>
                            <input type="text" id="universityName-english" name="universityName-english" class="form-control" required>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="universityName-arabic" style="font-weight:bold;color:#5F7AE7">@Localizer["UniversityArabic"]</label>
                            <input type="text" id="universityName-arabic" name="universityName-arabic" class="form-control" required>
                        </div>
                    </div>

                    <label for="attachments-uploader" class="drop-container">
                        <span class="drop-title">@Localizer["DropHere"]</span>
                        or
                        <input type="file" id="attachments-uploader" required>
                    </label>
                </form>
            </div>

            <div class="modal-footer">
                <button id="close-attachment-modal" type="button" class="btn btn-danger" data-dismiss="modal">@Localizer["Cancel"] </button>
                <button onclick="uploadCertification()" type="button" class="btn btn-success" style="background-color:#5F7AE7">@Localizer["Upload"]</button>
            </div>
        </div>
    </div>
</div>



<!------------------------------ Required Attachment -------------------->

<div class="modal fade" id="RequiredAttachmentsModal" tabindex="-1" role="dialog" aria-labelledby="RequiredAttachmentsModal" aria-hidden="true">
    <div class="modal-dialog custom-modal-dialog" role="document" style="max-width:fit-content">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="RequiredAttachmentsModal"> @Localizer["Required Attachments"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="degrees-ddl" style="font-weight:bold;color:#5F7AE7">@Localizer["Please Add The Required Attachments Below"]</label>
                            <ul>
                                <li id="sign-contract-upload" style="color:red;font-weight:bold">
                                    - Signed Contract
                                    <br />

                                    <button id="showagreementModalBtn" type="button" class="btn btn-primary add-edit-btn" data-toggle="modal" data-target="#agreementModal">
                                        <i class="fa-solid fa-signature" aria-hidden="true"></i> Sign Contract
                                    </button>
                                </li>

                                <li id="professional-Category-upload" style="color:red;font-weight:bold">
                                    - Professional Category
                                    <br />
                                    <label for="reqattachments-uploader-Category">
                                        <input type="file" id="reqattachments-uploader-Category" data-show-upload="false" data-show-caption="true" required>
                                    </label>
                                </li>
                            </ul>
                        </div>
                    </div>

                </form>

                <div id="fileList"></div>
            </div>

            <div class="modal-footer">
                <button id="close-reqattachment-modal" type="button" class="btn btn-danger" data-dismiss="modal">@Localizer["Cancel"] </button>
                <button onclick="uploadRequiredAttachmnets()" type="button" class="btn btn-success" style="background-color:#5F7AE7">@Localizer["Submit"]</button>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="agreementModal" tabindex="-1" role="dialog" aria-labelledby="agreementModal" aria-hidden="true">
    <div class="modal-dialog custom-modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="agreementModal"> @Localizer["Agreement"]
            </div>

            <div class="modal-body">
                <iframe src="/uploadfiles/agreement.pdf#zoom=73" width="100%" height="600px" frameborder="0"></iframe>

            </div>

            <div class="modal-footer">
                <button id="agreementConfirmationBtn" data-toggle="modal" data-target="#agreementConfirmation" type="button" class="btn btn-success" style="background-color:#5F7AE7">@Localizer["IAgree"]</button>
                <button id="btn-not-now" type="button" class="btn btn-danger" data-dismiss="modal" style="margin:@footerButtonsValue"> @Localizer["NotNow"]</button>
            </div>
        </div>
    </div>
</div>


<button hidden id="showagreementModalBtn" type="button" class="btn btn-danger wide-button  add-edit-btn" data-toggle="modal" data-target="#agreementModal">
    <i class="fa fa-upload" aria-hidden="true"></i>Show Modal
</button>




<div class="modal" id="agreementConfirmation" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> @Localizer["Confirmation"] </h5>

            </div>
            <div class="modal-body">
                <p> @Localizer["ConfirmationMessage"] </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">  @Localizer["No"] </button>
                <button style="margin:@footerButtonsValue" onclick="agree()" type="button" data-dismiss="modal" class="btn btn-success"> @Localizer["Yes"] </button>
            </div>
        </div>
    </div>
</div>


<style>
    .custom-modal-dialog {
        max-width: 650px; /* Set the desired width */
        max-height: 400px;
        /* Add additional CSS properties if needed */
    }
</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<script>
    $(document).ready(function () {
        loadUserProfileOverview();

        const dropContainer = document.querySelector('.drop-container');
        const fileInput = document.querySelector('#images');

        dropContainer.addEventListener('dragover', handleDragOver);
        dropContainer.addEventListener('dragleave', handleDragLeave);
        dropContainer.addEventListener('drop', handleDrop);

        function handleDragOver(event) {
            event.preventDefault();
            dropContainer.style.background = '#eee';
            dropContainer.style.borderColor = '#111';
        }

        function handleDragLeave(event) {
            event.preventDefault();
            dropContainer.style.background = 'transparent';
            dropContainer.style.borderColor = '#555';
        }

        function handleDrop(event) {
            event.preventDefault();
            dropContainer.style.background = 'transparent';
            dropContainer.style.borderColor = '#555';

            const files = event.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
            }
        }
    });


    function agree() {
        $.ajax({
            url: '@Url.Action("Agree", "ServiceProvider")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $('#btn-not-now').click()
                toastr.success('', '@Localizer["Success"]');
            }
        });

    }

    function loadUserProfileOverview() {
        $.ajax({


            url: "/ServiceProvider/GetUserProfileInfo",
            method: "GET",
            success: function (response) {

                $("#fullname-label").text(response.fullname);
                $("#number-patients-label").text(response.numberPatients);
                $("#review-label").text("(" + response.review + ")");
                $("#insurance-label").text(response.insuranceAccept == true ? "@Localizer["Yes"]" : "@Localizer["No"]");
                $("#bio-label").text(response.bio);
                if (response.speciality == "" || response.speciality == null) {
                    $("#speciality-label").show()
                    $("#speciality-label").text("@Localizer["NoSpeciality"]");
                }
                else {

                    $('#listSpeciality').empty()
                    $("#speciality-label").hide()
                    // Step 1: Split the string into an array using comma as the delimiter
                    var dataArray = response.speciality.split(',');
                    // Step 2: Iterate through the array and create <li> elements
                    dataArray.forEach(function (item) {
                        // Step 3: Append each <li> element to the container with id "listContainer"
                        $('#listSpeciality').append('<li style="color:black"> ♦ ' + item + '</li>');
                    });
                }

                $("#certifications-label").text(response.certifactions);
                if (response.profileStatus == "Rejected")
                    $("#help-msg").text("@Localizer["RejectionReasonIs"]" + response.rejectionReason)
                setProfileStatus(response.profileStatus);
                if (response.profilePicturePath != null || response.profilePicturePath != undefined)
                    $('[id^="user-image"]').attr('src', response.profilePicturePath);

                if (response.accountType == 2) {
                    $("#certifications-div").hide();
                    $("#requiredAttachments-div").hide();
                }



                if (response.profileStatus == "UnCompleted" || response.profileStatus == "Rejected") {
                    canSendProfile();
                }
                else {
                    $("#requiredAttachments-div").hide();
                }
                getCertifications();
              
                if (!response.isAgree) {
                    $("#showagreementModalBtn").click();
                }
                else 
                {
                    $("#sign-contract-upload").hide()
                }


                if (!response.isProfessionalCategoryRequired) {
                    $("#professional-Category-upload").hide();
                }

                if (!response.isCertifactionsAttachmnetsRequired) {
                    $("#certifications-div").hide();

                }

                if (!response.isProfessionalCategoryRequired && response.isAgree) {
                    $("#requiredAttachments-div").hide();
                }

            },
            error: function (error) {
                console.log(error);
            }
        });



    }

    function getFullUserProfileInfo() {
        var isEng = isEnglishCulture();
        $.ajax({
            url: '@Url.Action("GetPractitionerTypesDDL", "Common")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#practitionerTypes-ddl-edit').empty();
                // Populate the dropdown list
                var dropdown = $('#practitionerTypes-ddl-edit');
                // Add remaining options
                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').val(item.id).text(isEng ? item.titleEn : item.titleAr));
                });
            }
        });

        $.ajax({
            url: '@Url.Action("GetAccountTypesDDL", "Common")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#accountTypes-ddl-edit').empty();
                // Populate the dropdown list
                var dropdown = $('#accountTypes-ddl-edit');
                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').val(item.id).text(isEng ? item.titleEn : item.titleAr));
                });
            }
        });

        $.ajax({
            url: '@Url.Action("GetUserProfessionalRanksDDL", "ServiceProvider")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#professionalRanks-ddl-edit').empty();

                // Populate the dropdown list
                var dropdown = $('#professionalRanks-ddl-edit');

                // Add default option
                dropdown.append($('<option></option>').val('').text('@Localizer["SelectProfessionalRank"]'));

                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').val(item.id).text(isEng ? item.titleEn : item.titleAr));
                });
            }
        });

        $.ajax({
            url: '@Url.Action("GetCountriesDDL", "ServiceProvider")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#countries-ddl-edit').empty();
                // Populate the dropdown list
                var dropdown = $('#countries-ddl-edit');
                // Add default option
                dropdown.append($('<option></option>').val('').text('@Localizer["SelectCountry"]'));
                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').val(item.id).text(isEng ? item.titleEn : item.titleAr));
                });
            }
        });

        $.ajax({
            url: "/ServiceProvider/GetFullUserProfileInfo",
            method: "GET",
            success: function (response) {
                setTimeout(function () {
                    $("#full-name-edit-input").val(response.fullName);
                    $("#bio-edit-input").val(response.bio);
                    $("#accountTypes-ddl-edit").val(response.accountTypeId);
                    $("#practitioner-edit-input").val(response.practitionerTypeId);
                    $("#phone-edit-input").val(response.phoneNumber);
                    $("#email-edit-input").val(response.email);
                    $("#professionalRanks-ddl-edit").val(response.professionalRankId);
                    $("#countries-ddl-edit").val(response.countryId);
                    $('#states-ddl-edit option:first').text(response.stateName);
                    $('#cities-ddl-edit option:first').text(response.cityName);

                    $("#speciality-edit-multiSelect").val(response.speciliaties);

                    $('.speciality-edit-multiSelect').empty()
                    if (response.speciliaties != null) {

                        var speciliatiesIds = response.speciliaties.split(",");
                        var specialtiesTitlesEn = response.specialtiesTitlesEn.split(",");
                        $.each(speciliatiesIds, function (index, item) {
                            var option = new Option(specialtiesTitlesEn[index], speciliatiesIds[index], true, true);
                            $('.speciality-edit-multiSelect').append(option).trigger('change');
                        });
                    }

                }, 300); // Delay for 1 second (1000 milliseconds)
            },
            error: function (error) {
                console.log(error);
            }
        });

        $('.speciality-edit-multiSelect').select2({
            theme: "classic",
            placeholder: '@Localizer["SelectOption"]',
            width: '100%',
            ajax: {
                url: '@Url.Action("GetUserSpecialtiesDDL", "Common")',
                cache: false
            }
        });

    }

    function loadImage(event) {

        var image = document.getElementById('user-image-edit');
        image.src = URL.createObjectURL(event.target.files[0]);
    }

    function getStatesUserProfile(countryId) {
        var isEng = isEnglishCulture();
        $.ajax({
            url: '@Url.Action("GetStatesDDL", "ServiceProvider")' + '?countryId=' + countryId,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#states-ddl-edit').empty();
                // Populate the dropdown list
                var dropdown = $('#states-ddl-edit');
                // Add default option
                dropdown.append($('<option></option>').val('').text('@Localizer["SelectState"]'));
                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').val(item.id).text(isEng ? item.titleEn : item.titleAr));
                });
            }
        });
    }

    function getCitesUserProfile(stateId) {
        var isEng = isEnglishCulture();
        $.ajax({
            url: '@Url.Action("GetCitiesDDL", "ServiceProvider")' + '?stateId=' + stateId,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#cities-ddl-edit').empty();
                // Populate the dropdown list
                var dropdown = $('#cities-ddl-edit');
                dropdown.append($('<option></option>').val('').text('@Localizer["SelectCity"]'));
                $.each(data, function (index, item) {
                    dropdown.append($('<option></option>').val(item.id).text(isEng ? item.titleEn : item.titleAr));
                });
            }
        });
    }

    function updateProfile() {
        var formData = new FormData();
        formData.append('FullName', $('#full-name-edit-input').val());
        formData.append('Bio', $('#bio-edit-input').val());
        formData.append('ProfessionalRankId', $('#professionalRanks-ddl-edit').val());
        formData.append('CountryId', $('#countries-ddl-edit').val());
        formData.append('StateId', $('#states-ddl-edit').val());
        formData.append('CityId', $('#cities-ddl-edit').val());
        formData.append('SpecialtiesIds', $('.speciality-edit-multiSelect').val().toString());

        var imageFile = $('#image-upload')[0].files[0];
        formData.append('image', imageFile);

        $.ajax({
            url: '/ServiceProvider/UpdateUserProfile',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                console.log(response);
                $("#close-overview").trigger("click");
                loadUserProfileOverview();
                toastr.success('@Localizer["ProfileUpdated"]', '@Localizer["Success"]');
                // Handle success response
            },
            error: function (error) {
                toastr.error('@Localizer["Error"]', '@Localizer["Failed"]');
                // Handle error response
            }
        });
    }


    function uploadCertification() {
        var fileInput = document.getElementById('attachments-uploader');
        var file = fileInput.files[0];

        // Check if file is selected
        if (!file) {
            toastr.error('@Localizer["SelectFile"]', '@Localizer["Error"]');
            return;
        }

        var formData = new FormData();
        formData.append('file', file);

        var degreeId = $('#degrees-ddl').val();
        var universityNameArabic = $('#universityName-arabic').val();
        var universityNameEnglish = $('#universityName-english').val();

        // Check if any of the required fields is empty
        if (!degreeId || !universityNameArabic || !universityNameEnglish) {
            toastr.error('@Localizer["FillAllFeilds"]', '@Localizer["Error"]');
            return;
        }

        // Append the additional fields to the FormData object
        formData.append('DegreeId', degreeId);
        formData.append('UniversityNameAr', universityNameArabic);
        formData.append('UniversityNameEn', universityNameEnglish);

        $.ajax({
            url: '/File/UploadCertification', // Replace with your API endpoint URL
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                // Handle the success response
                $("#close-attachment-modal").trigger("click");
                getCertifications();
                toastr.success('@Localizer["CertificationUploaded"]', '@Localizer["Success"]');

            },
            error: function (xhr, status, error) {
                // Handle the error response
                toastr.error('@Localizer["Error"]', '@Localizer["Failed"]');
            }
        });

    }

    function getCertifications() {

        var tableBody = $('#certifications-list');
        tableBody.empty();
        var isEng = isEnglishCulture();
        $.ajax({
            url: '@Url.Action("GetCertifications", "ServiceProvider")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                if (data.length == 0) {
                    $("#certifications-label").text("@Localizer["NoCertifications"]");
                    $("#certifications-label").show();
                    $("#certifications-container").hide();
                } else {
                    $("#certifications-container").show();
                    $("#certifications-label").text("@Localizer["YouHave"] " + data.length + " @Localizer["CertificatesAdded"] ");
                    tableBody.empty(); // Clear the table body before appending new rows
                    data.forEach(function (item) {
                        var row = $('<tr>');
                        var degreeCell = $('<td>').text(isEng ? item.degree.titleEn : item.degree.titleAr);
                        var universityCell = $('<td>').text(isEng ? item.universityNameEn : item.universityNameAr);

                        var iconClass = '';
                        var iconColor = '';
                        switch (item.extension.replace(".", "")) {
                            case 'pdf':
                                iconClass = 'far fa-file-pdf';
                                iconColor = 'red';
                                break;
                            case 'pptx':
                            case 'ppt':
                                iconClass = 'far fa-file-powerpoint';
                                iconColor = 'orange';
                                break;
                            case 'docx':
                            case 'doc':
                                iconClass = 'far fa-file-word';
                                iconColor = 'blue';
                                break;
                            case 'xlsx':
                            case 'xls':
                                iconClass = 'far fa-file-excel';
                                iconColor = 'green';
                                break;
                            case 'jpg':
                            case 'jpeg':
                            case 'png':
                            case 'gif':
                                iconClass = 'far fa-file-image';
                                iconColor = 'purple';
                                break;
                            default:
                                iconClass = 'far fa-file';
                                break;
                        }

                        var link = $('<a>')
                            .attr('href', item.path)
                            .attr('target', '_blank')
                            .append($('<span>').addClass(iconClass).css('color', iconColor)) // Add the icon span with color
                            .append('&nbsp;') // Add space between the icon and the name
                            .append($('<span>').text(item.name.trim())); // Add the certification name
                        var fileCell = $('<td>').append(link);

                        var removeIcon = $('<i>')
                            .addClass('fa fa-remove')
                            .css({
                                color: 'red',
                                cursor: 'pointer'
                            })
                            .attr('aria-hidden', 'true')
                            .attr('data-certificate-id', item.id)
                            .click(function () {
                                var certificateId = $(this).data('certificate-id');
                                removeCertificate(certificateId);
                            });
                        var actionsCell = $('<td>').append(removeIcon);

                        row.append(degreeCell).append(universityCell).append(fileCell).append(actionsCell);
                        tableBody.append(row);
                    });
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }


    function removeCertificate(fileId) {

        // Perform an AJAX request to delete the certificate
        $.ajax({
            url: '/File/DeleteFile/' + fileId, // Replace with the actual URL to delete the certificate
            type: 'POST', // Use the appropriate HTTP method (e.g., POST, DELETE) for deleting the certificate
            success: function (response) {
                // Certificate deleted successfully, you can perform any additional actions here
                getCertifications();
                toastr.success('@Localizer["CertificateDeleted"]', '@Localizer["Success"]');
                canSendProfile();
                // Refresh the certifications list or perform any other necessary updates

            },
            error: function (error) {
                // Handle the AJAX error
                toastr.error('@Localizer["FailedDelete"]', response.error);
                console.error('AJAX error:', error);
            }
        });

    }

    function canSendProfile() {
        $.ajax({
            url: '/ServiceProvider/CanSendProfile',
            type: 'Get',
            success: function (response) {
                if (response == true) {
                    $("#active-profile-sign").show();
                    $("#requiredAttachments-label").text("You have already added Signed Contract & Professional Category Files");
                    $("#requiredAttachBtn").removeClass("btn-danger").addClass("btn-primary");
                }
                if (response == false) {
                    $("#active-profile-sign").hide();
                }

            },
            error: function (xhr, status, error) {
                toastr.error('Error occurred.', 'Failed !!');
            }
        });
    }


    function getDegrees() {
        // Reset the form fields
        $('#degrees-ddl').val('');
        $('#universityName-english').val('');
        $('#universityName-arabic').val('');
        // Make an AJAX call to retrieve the data from the API
        $.ajax({
            url: '@Url.Action("GetDegrees", "ServiceProvider")',  // Replace 'your-api-url' with the actual API endpoint URL
            method: 'GET',
            success: function (response) {
                // On success, loop through the response data and populate the dropdown options
                var dropdown = $('#degrees-ddl');
                var isEng = isEnglishCulture();
                dropdown.empty();
                $.each(response, function (index, degree) {
                    dropdown.append($('<option>').text(isEng ? degree.titleEn : degree.titleAr).val(degree.id));
                });
            },
            error: function () {
                console.log('Error occurred while retrieving degree data.');
            }
        });
    }


    function uploadRequiredAttachmnets() {
        // var fileInput = document.getElementById('reqattachments-uploader-Contract');
        // var contractfile = fileInput.files[0];


        var fileInput = document.getElementById('reqattachments-uploader-Category');
        var categoryfile = fileInput.files[0];

        // Check if file is selected
        // if (!contractfile) {
        //     toastr.error('@Localizer["Please upload Signed Contract file"]', '@Localizer["Warning"]');
        //     return;
        // }

        if (!categoryfile) {
            toastr.error('@Localizer["Please upload Professional Category file"]', '@Localizer["Error"]');
            return;
        }

        var formData = new FormData();
        // formData.append('contractfile', contractfile);
        formData.append('categoryfile', categoryfile);


        $.ajax({
            url: '/File/UploadRequiredFiles', // Replace with your API endpoint URL
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                // Handle the success response
                canSendProfile();

                $("#close-reqattachment-modal").trigger("click");
                toastr.success('@Localizer["RequiredAttachmnets"]', '@Localizer["Success"]');
            },
            error: function (xhr, status, error) {
                // Handle the error response
                toastr.error('@Localizer["Error"]', '@Localizer["Failed"]');
            }
        });


    }




</script>


<script>
    // JavaScript Code
    let button = document.querySelector('.send-review-btn');
    let buttonText = document.querySelector('.tick');

    const tickMark = "<svg width=\"58\" height=\"45\" viewBox=\"0 0 58 45\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#fff\" fill-rule=\"nonzero\" d=\"M19.11 44.64L.27 25.81l5.66-5.66 13.18 13.18L52.07.38l5.65 5.65\"/></svg>";

    buttonText.innerHTML = "@Localizer["SendToReview"]";

    button.addEventListener('click', function () {
        if (buttonText.innerHTML !== "@Localizer["SendToReview"]") {
            buttonText.innerHTML = "@Localizer["SendToReview"]";
        }
        else if (buttonText.innerHTML === "@Localizer["SendToReview"]") {
            buttonText.innerHTML = tickMark;
        }
        $("#send-icon").hide()
        this.classList.toggle('send-review-btn__circle');
    });
</script>
<style>
    /* CSS Styles */
    .send-review-btn, .tick {
        display: flex;
        justify-content: center;
        margin-left: auto;
        align-items: center;
        font-family: sans-serif;
    }

    .send-review-btn {
        width: 120px;
        height: 60px;
        background: #5F7AE7;
        border-radius: 6px;
        transition: all .3s cubic-bezier(0.67, 0.17, 0.40, 0.83);
    }

        .send-review-btn svg {
            transform: rotate(180deg);
            transition: all .5s;
        }

    .send-review-btn__circle {
        width: 60px;
        height: 50px;
        background: mediumseagreen;
        border-radius: 50%;
        transform: rotate(-180deg);
    }

    .send-review-btn:hover {
        cursor: pointer;
    }

    .tick {
        color: white;
        /*font-size: 2em;*/
        transition: all .9s;
    }

</style>

