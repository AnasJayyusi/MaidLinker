@model List<MaidLinker.Data.Entites.Maid>

<!-- #region Localization Setup -->
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    string cultureCode = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    string direction = cultureCode.StartsWith("ar", StringComparison.OrdinalIgnoreCase) ? "rtl" : "ltr";
    string textAlign = direction == "rtl" ? "right" : "left";
    bool isEng = cultureCode.StartsWith("en", StringComparison.OrdinalIgnoreCase);
}
<!-- #endregion -->
<!-- #region Pagination Logic -->
@{
    var defaultPageSize = 5;
    var currentPage = Context.Request.Query["page"].ToString();
    if (string.IsNullOrEmpty(currentPage)) currentPage = "1";

    var searchQuery = Context.Request.Query["search"].ToString().Trim();
    var filteredItems = string.IsNullOrEmpty(searchQuery) ? Model :
        Model.Where(m => m.FirstNameEn.ToLower().Contains(searchQuery.ToLower()) ||
                         m.FirstNameAr.ToLower().Contains(searchQuery.ToLower())).ToList();
    var totalItems = filteredItems.Count;

    var pageSizeParam = Context.Request.Query["pageSize"].ToString();
    var pageSize = string.IsNullOrEmpty(pageSizeParam) ? defaultPageSize : int.Parse(pageSizeParam);
    pageSize = Math.Max(1, Math.Min(pageSize, totalItems));

    var totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
    var startIndex = (int.Parse(currentPage) - 1) * pageSize;
    var endIndex = Math.Min(startIndex + pageSize - 1, totalItems - 1);

    var visibleItems = filteredItems.GetRange(startIndex, endIndex - startIndex + 1);
}
<!-- #endregion -->
<!-- #region Filter UI -->
<div class="row justify-content-between">
    <div class="col-md-6">
        <form method="get" class="d-flex flex-wrap align-items-center">
            <div class="form-group mr-2">
                <input type="text" class="form-control" name="search" placeholder="@Localizer["Search"]" value="@searchQuery">
            </div>
            <div class="form-group mr-2">
                <button type="submit" class="btn btn-primary">@Localizer["Search"]</button>
            </div>
        </form>
    </div>
    <div class="col-md-6 d-flex justify-content-end">
        <form method="get" class="d-flex flex-wrap align-items-center">
            <div class="form-group mr-2">
                <input type="number" class="form-control" name="pageSize" min="1" max="@totalItems" value="@pageSize">
            </div>
            <div class="form-group mr-2">
                <button type="submit" class="btn btn-primary">@Localizer["Apply"]</button>
            </div>
        </form>
    </div>
</div>
<!-- #endregion -->
<!-- #region Table -->
<table class="table table-striped" dir="@direction">
    <thead>
        <tr>
            <th>#</th>
            <th>@Localizer["FirstNameEn"]</th>
            <th>@Localizer["FirstNameAr"]</th>
            <th>@Localizer["Attachments"]</th>
            <th>@Localizer["Actions"]</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < visibleItems.Count; i++)
        {
            var maid = visibleItems[i];
            <tr>
                <td>@(startIndex + i + 1)</td>
                <td>@maid.FirstNameEn</td>
                <td>@maid.FirstNameAr</td>
                <td>
                    <div>
                        <button onclick="getAttachments(@maid.Id)" class="btn btn-warning btn-sm rounded-pill" data-toggle="modal" data-target="#EditAttachments" title="@Localizer["Attachments"]">
                            <i class="fa fa-file"></i>
                        </button>
                    </div>
                </td>
                <td>
                    <div>
                        <button onclick="getMaid(@maid.Id)" class="btn btn-success btn-sm rounded-pill" data-toggle="modal" data-target="#EditMaid" title="@Localizer["Edit"]">
                            <i class="fa fa-edit"></i>
                        </button>
                        <a href="#" class="btn btn-danger btn-sm rounded-pill ml-1" data-toggle="modal" data-target="#confirmDeleteModal_@maid.Id">
                            <i class="fa fa-trash"></i>
                        </a>
                    </div>

                    <!-- Delete Modal -->
                    <div class="modal fade" id="confirmDeleteModal_@maid.Id" tabindex="-1" role="dialog">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">@Localizer["Confirmation"]</h5>
                                    <button type="button" class="btn-close" data-dismiss="modal">&times;</button>
                                </div>
                                <div class="modal-body">@Localizer["DeleteConfirmation"]</div>
                                <div class="modal-footer">
                                    <button class="btn btn-secondary" data-dismiss="modal">@Localizer["Cancel"]</button>
                                    <a href="/Admin/DeleteMaid/@maid.Id" class="btn btn-danger">@Localizer["Delete"]</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- #endregion -->
<!-- #region Edit Modal -->
<div class="modal fade" id="EditMaid" tabindex="-1" role="dialog" aria-labelledby="EditMaidModal" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Edit"]</h5>
                <button type="button" class="btn-close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <form id="maidForm" enctype="multipart/form-data">
                    <div class="row">
                        <!-- English Names -->
                        <input type="hidden" id="maidId" />
                        <div class="col-md-5">
                            <h6 style="color:#4c65d1" class="modal-title">@Localizer["EnglishNames"]</h6>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["FirstNameEn"]</label>
                                <input type="text" class="form-control" id="firstNameEn" maxlength="250" required />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["SecondNameEn"]</label>
                                <input type="text" class="form-control" id="secondNameEn" maxlength="250" />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["ThirdNameEn"]</label>
                                <input type="text" class="form-control" id="thirdNameEn" maxlength="250" />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["LastNameEn"]</label>
                                <input type="text" class="form-control" id="lastNameEn" maxlength="250" />
                            </div>
                        </div>

                        <!-- Vertical Separator Line -->
                        <div class="col-md-1 d-flex justify-content-center">
                            <div style="border-left: 1px solid #ddd; height: 100%;"></div>
                        </div>

                        <!-- Arabic Names -->
                        <div class="col-md-5">
                            <h6 style="color:#4c65d1">@Localizer["ArabicNames"]</h6>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["FirstNameAr"]</label>
                                <input type="text" class="form-control" id="firstNameAr" maxlength="250" required />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["SecondNameAr"]</label>
                                <input type="text" class="form-control" id="secondNameAr" maxlength="250" />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["ThirdNameAr"]</label>
                                <input type="text" class="form-control" id="thirdNameAr" maxlength="250" />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["LastNameAr"]</label>
                                <input type="text" class="form-control" id="lastNameAr" maxlength="250" />
                            </div>
                        </div>
                    </div>

                    <hr />

                    <div class="row">
                        <!-- Left side: Experience, Date of Birth, Marital Status, Childs -->
                        <div class="col-md-6">
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["DateOfBirth"]</label>
                                <input type="date" class="form-control" id="dateOfBirth" placeholder="dd-mm-yyyy" required />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["TotalExperience"] (@Localizer["Years"])</label>
                                <input type="number" class="form-control" id="totalExperience" min="0" step="1" />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["MaritalStatus"]</label>
                                <select class="form-control" id="maidsListlMaritalStatus">
                                </select>
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["Childs"]</label>
                                <input type="number" class="form-control" id="childs" min="0" />
                            </div>


                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["Nationality"]</label>
                                <select class="form-control" id="nationalities">
                                </select>
                            </div>
                        </div>

                        <!-- Right side: Served Countries, Languages -->
                        <div class="col-md-6">
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["ServedCountries"] <span class="alert-warning">(@Localizer["UseCtrlToMultiSelect"])</span></label>
                                <select multiple class="form-control" id="maidsListCountries">
                                    <!-- Populate dynamically -->

                                </select>
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["Languages"] <span class="alert-warning">(@Localizer["UseCtrlToMultiSelect"])</span></label>
                                <select multiple class="form-control" id="maidsListlanguages">
                                    <!-- Populate dynamically -->

                                </select>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group" style="text-align:@textAlign">
                                    <label>@Localizer["Note"]</label>
                                    <textarea class="form-control" style="background-color:beige" id="note" rows="3"></textarea>
                                </div>
                            </div>


                        </div>

                    </div>

                    <hr />

                    <div class="text-center my-3">
                        <img id="maidImagePreview" src="/images/female.png" alt="Maid Image"
                             style="width: 150px; height: 150px; border-radius: 50%; object-fit: contain; border: 2px solid #ccc;" />
                    </div>
                    <div class="row">
                        <!-- Media URLs and Address -->
                        <div class="col-md-12">
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["ImagePath"] (@Localizer["UploadImage"])</label>
                                <input type="file" accept="image/*" class="form-control" id="imagePath" />
                            </div>
                            <div class="form-group" style="text-align:@textAlign">
                                <label>@Localizer["VideoURL"]</label>
                                <input type="url" class="form-control" id="videoURL" placeholder="https://www.youtube.com/watch?v=example" />
                            </div>
                        </div>
                    </div>
                </form>

                <div class="alert alert-danger hidden" role="alert" id="error-msg">@Localizer["PleaseFillAllFields"]</div>
            </div>
            <div class="modal-footer">
                <button id="close-edit-Maid" type="button" class="btn btn-danger" data-dismiss="modal">@Localizer["Cancel"]</button>
                <button id="edit-Maid" type="button" class="btn btn-success" style="background-color:#5F7AE7">@Localizer["Save"]</button>
            </div>
        </div>
    </div>
</div>
<!-- #endregion -->
<!-- #Attachment Edit Modal -->
<div class="modal fade" id="EditAttachments" tabindex="-1" role="dialog" aria-labelledby="EditAttachmentsLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form id="attachmentForm" enctype="multipart/form-data">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Localizer["ManageAttachments"]</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="attachmentMaidId" name="MaidId" />

                    <!-- MEDICAL Attachment -->
                    <div class="form-group" id="medicalGroup">
                        <label>@Localizer["Medical"]</label>
                        <div class="position-relative d-flex align-items-center">
                            <input type="file" name="MedicalFile" class="d-none" id="medicalInput" onchange="handleFileChange(this, 'medical')">
                            <button type="button" class="btn btn-outline-secondary btn-sm icon-upload" onclick="document.getElementById('medicalInput').click()">
                                <i class="fa fa-upload"></i>
                            </button>
                            <span class="ml-2 text-muted" id="medicalFileName">@Localizer["NoFileSelected"]</span>
                        </div>
                        <div id="medicalLink" class="mt-2 d-none">
                            <a href="#" target="_blank" id="medicalAnchor" class="btn btn-outline-primary btn-sm mr-2">
                                <i class="fa fa-file"></i> @Localizer["ViewFile"]
                            </a>

                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="toggleInput('medical')">
                                <i class="fa fa-edit"></i>
                            </button>
                        </div>
                    </div>

                    <!-- RESIDENCY Attachment -->
                    <div class="form-group" id="residencyGroup">
                        <label>@Localizer["Residency"]</label>
                        <div class="position-relative d-flex align-items-center">
                            <input type="file" name="ResidencyFile" class="d-none" id="residencyInput" onchange="handleFileChange(this, 'residency')">
                            <button type="button" class="btn btn-outline-secondary btn-sm icon-upload" onclick="document.getElementById('residencyInput').click()">
                                <i class="fa fa-upload"></i>
                            </button>
                            <span class="ml-2 text-muted" id="residencyFileName">@Localizer["NoFileSelected"]</span>
                        </div>
                        <div id="residencyLink" class="mt-2 d-none">
                            <a href="#" target="_blank" id="residencyAnchor" class="btn btn-outline-primary btn-sm mr-2">
                                <i class="fa fa-file"></i> @Localizer["ViewFile"]
                            </a>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="toggleInput('residency')">
                                <i class="fa fa-edit"></i>
                            </button>
                        </div>
                    </div>

                    <!-- PASSPORT Attachment -->
                    <div class="form-group" id="passportGroup">
                        <label>@Localizer["Passport"]</label>
                        <div class="position-relative d-flex align-items-center">
                            <input type="file" name="PassportFile" class="d-none" id="passportInput" onchange="handleFileChange(this, 'passport')">
                            <button type="button" class="btn btn-outline-secondary btn-sm icon-upload" onclick="document.getElementById('passportInput').click()">
                                <i class="fa fa-upload"></i>
                            </button>
                            <span class="ml-2 text-muted" id="passportFileName">@Localizer["NoFileSelected"]</span>
                        </div>
                        <div id="passportLink" class="mt-2 d-none">
                            <a href="#" target="_blank" id="passportAnchor" class="btn btn-outline-primary btn-sm mr-2">
                                <i class="fa fa-file"></i> @Localizer["ViewFile"]
                            </a>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="toggleInput('passport')">
                                <i class="fa fa-edit"></i>
                            </button>
                        </div>
                    </div>

                    <!-- OTHER Attachment -->
                    <div class="form-group" id="otherGroup">
                        <label>@Localizer["Other"]</label>
                        <div class="position-relative d-flex align-items-center">
                            <input type="file" name="OtherFile" class="d-none" id="otherInput" onchange="handleFileChange(this, 'other')">
                            <button type="button" class="btn btn-outline-secondary btn-sm icon-upload" onclick="document.getElementById('otherInput').click()">
                                <i class="fa fa-upload"></i>
                            </button>
                            <span class="ml-2 text-muted" id="otherFileName">@Localizer["NoFileSelected"]</span>
                        </div>
                        <div id="otherLink" class="mt-2 d-none">
                            <a href="#" target="_blank" id="otherAnchor" class="btn btn-outline-primary btn-sm mr-2">
                                <i class="fa fa-file"></i> @Localizer["ViewFile"]
                            </a>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="toggleInput('other')">
                                <i class="fa fa-edit"></i>
                            </button>
                        </div>
                    </div>





                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">@Localizer["Upload"]</button>
                </div>
            </div>
        </form>
    </div>
</div>
<!-- #endregion -->

<!-- #region No Results -->
@if (totalItems == 0)
{
    <div class="text-center">
        <label style="font-weight:bold">@Localizer["NoResultsFound"]</label>
        <img src="~/icon/no-result-found-icon.png" width="25" height="25" />
    </div>
}
<!-- #endregion -->
<!-- #region Pagination -->
<div class="text-center">
    <ul class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == int.Parse(currentPage) ? "active" : "")">
                <a class="page-link" href="?page=@i&search=@searchQuery&pageSize=@pageSize">@i</a>
            </li>
        }
    </ul>
</div>
<!-- #endregion -->
<!-- #region Scripts -->
<script>

    function getMaid(id) {
         loadLanguages("#maidsListlanguages");
         loadCountries('#maidsListCountries');
         loadMaritalStatuses('#maidsListlMaritalStatus');
         loadNationalities('#maidsListNationalities');
         $.ajax({
        url: '/Admin/GetMaid/' + id,
        type: 'GET',
        success: function (data) {
            $('#maidId').val(data.id);
            // English names
            $('#firstNameEn').val(data.firstNameEn);
            $('#secondNameEn').val(data.secondNameEn);
            $('#thirdNameEn').val(data.thirdNameEn);
            $('#lastNameEn').val(data.lastNameEn);

            // Arabic names
            $('#firstNameAr').val(data.firstNameAr);
            $('#secondNameAr').val(data.secondNameAr);
            $('#thirdNameAr').val(data.thirdNameAr);
            $('#lastNameAr').val(data.lastNameAr);

            // Other fields
            
            $('#dateOfBirth').val(data.dateOfBirth?.split('T')[0]); // Format if needed
            $('#totalExperience').val(data.totalExperience);
            $('#maidsListlMaritalStatus').val(data.maritalStatusId);
            $('#childs').val(data.childs);
            $('#maidsListNationalities').val(data.nationalityId);
            $('#note').val(data.note);
            $('#videoURL').val(data.videoURL);

            // Multi-select: Served countries and languages
            $('#maidsListCountries').val(data.servedCountryIds).change();
            $('#maidsListlanguages').val(data.languageIds).change();


            setImage(data.imagePath); // Set the image preview
            // Clear image field (cannot set value for security reasons)
            $('#imagePath').val('');


            // Show the modal
            // $('#EditMaid').modal('show');
        },
        error: function (xhr, status, error) {
            alert('Error loading maid data');
        }
    });
    }

    function setImage(imagePath)
    {
    // Set the image if path exists
    if (imagePath) {
        document.getElementById("maidImagePreview").src = imagePath.startsWith("/")
            ? imagePath
            : "/" +imagePath; // ensure leading slash
    } else {
        // fallback placeholder
        document.getElementById("maidImagePreview").src = "/images/female.png";
    }

    }


      

     

       $('#edit-Maid').on('click', function() {
        var formData = new FormData();
        var maidId = $('#maidId').val();

        // Add form fields
        formData.append('Id', maidId);
        formData.append('FirstNameEn', $('#firstNameEn').val());
        formData.append('SecondNameEn', $('#secondNameEn').val());
        formData.append('ThirdNameEn', $('#thirdNameEn').val());
        formData.append('LastNameEn', $('#lastNameEn').val());

        formData.append('FirstNameAr', $('#firstNameAr').val());
        formData.append('SecondNameAr', $('#secondNameAr').val());
        formData.append('ThirdNameAr', $('#thirdNameAr').val());
        formData.append('LastNameAr', $('#lastNameAr').val());

        const rawDate = $('#dateOfBirth').val();  // usually "1994-01-14"
        const formattedDate =new Date(rawDate).toISOString();  // still "1994-01-14"
        formData.append("DateOfBirth", formattedDate);
        formData.append('TotalExperience', $('#totalExperience').val());
        formData.append('MaritalStatus', $('#maidsListlMaritalStatus').val());
        formData.append('Childs', $('#childs').val());
        formData.append('Note', $('#note').val());
        formData.append('NationalityId', $('#maidsListNationalities').val());
        formData.append('VideoURL', $('#videoURL').val());

        // Add ServedCountryIds - multiple select
        $('#maidsListCountries option:selected').each(function() {
            formData.append('ServedCountryIds', $(this).val());
        });

        // Add LanguageIds - multiple select
        $('#maidsListlanguages option:selected').each(function() {
            formData.append('LanguageIds', $(this).val());
        });

        // Add Image file if selected
        var fileInput = $('#imagePath')[0];
        if (fileInput.files.length > 0) {
            formData.append('ImagePath', fileInput.files[0]);
        }

        $.ajax({
            url: '/Admin/UpdateMaid', // change to your update endpoint
            type: 'POST',
            data: formData,
            processData: false,  // Important for FormData
            contentType: false,  // Important for FormData
            success: function(response) {
                // Optionally close modal and refresh data
                 $('#close-edit-Maid').trigger('click');
                // reload or update UI accordingly
            },
            error: function(xhr) {
               $('#error-msg').removeClass('hidden').text(@Localizer["FillAllRequiredFeildsPlease"]);
            }
        });
    });

    // Load Image
      document.getElementById('imagePath').addEventListener('change', function (event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('maidImagePreview').src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    });



</script>
<!-- #endregion -->
<script>

$('#attachmentForm').submit(function (e) {
    debugger;
    e.preventDefault();

    const formData = new FormData();
    formData.append("MaidId", $('#attachmentMaidId').val());

    ['medical', 'residency', 'passport', 'other'].forEach(type => {
        const fileInput = document.getElementById(type + 'Input');
        if (fileInput.files.length > 0) {
            // Append only if user selected file to upload
            formData.append(type.charAt(0).toUpperCase() + type.slice(1) + "File", fileInput.files[0]);
        }
    });

    $.ajax({

     url: '/Admin/UploadAttachments', // your API endpoint here
        type: 'POST',
        data: formData,
        contentType: false,
        processData: false,
        success: function (res) {
            alert('Attachments uploaded successfully');
            $('#EditAttachments').modal('hide');
            // optionally reload attachments list or update UI
        },
        error: function (xhr) {
            alert('Upload failed: ' + xhr.responseText);
        }
    });
});



    function handleFileChange(input, type) {
        const file = input.files[0];
        if (file) {
            const fileName = file.name;
            const fileUrl = URL.createObjectURL(file);
            const fileIcon = getFileIcon(fileName);

            document.getElementById(`${type}FileName`).innerText = fileName;
            document.getElementById(`${type}Group`).querySelector('.icon-upload').classList.add('d-none');

            const iconElement = document.getElementById(`${type}Anchor`).querySelector('i');
            iconElement.className = fileIcon;

            document.getElementById(`${type}Anchor`).href = fileUrl;
            document.getElementById(`${type}Link`).classList.remove('d-none');
        }
    }

    function toggleInput(type) {
        document.getElementById(`${type}Input`).value = "";
        document.getElementById(`${type}FileName`).innerText = "@Localizer["NoFileSelected"]";
        document.getElementById(`${type}Group`).querySelector('.icon-upload').classList.remove('d-none');
        document.getElementById(`${type}Link`).classList.add('d-none');
        document.getElementById(`${type}Anchor`).href = "#";
    }

    function getFileIcon(fileName) {
        const ext = fileName.split('.').pop().toLowerCase();

        switch (ext) {
            case 'pdf': return 'fa fa-file-pdf text-danger';
            case 'doc':
            case 'docx': return 'fa fa-file-word text-primary';
            case 'xls':
            case 'xlsx': return 'fa fa-file-excel text-success';
            case 'ppt':
            case 'pptx': return 'fa fa-file-powerpoint text-warning';
            case 'jpg':
            case 'jpeg':
            case 'png':
            case 'gif': return 'fa fa-file-image text-info';
            case 'zip':
            case 'rar': return 'fa fa-file-archive';
            case 'mp4':
            case 'webm': return 'fa fa-file-video';
            default: return 'fa fa-file';
        }
    }


            function populateAttachments(attachments) {
            debugger;
     

        // Define mapping from attachment type to UI ids
        const types = ['medical', 'residency', 'passport', 'other'];

        types.forEach(type => {
            const attach =attachments.find(a => a.type.toLowerCase() === type);
            const input = document.getElementById(type + 'Input');
            const linkDiv = document.getElementById(type + 'Link');
            const anchor = document.getElementById(type + 'Anchor');
            const fileNameSpan = document.getElementById(type + 'FileName');

            if (attach) {
                // Hide file input
                input.classList.add('d-none');
                // Show link with href and file name
                    anchor.href = attach.filePath;
                        anchor.textContent = attach.filePath.split('/').pop(); // just filename
                linkDiv.classList.remove('d-none');
                // Clear filename span since input hidden
                fileNameSpan.textContent = '';
            } else {
                // No attachment - show input, hide link
                input.value = ''; // clear file input
                input.classList.remove('d-none');
                linkDiv.classList.add('d-none');
                fileNameSpan.textContent = '@Localizer["NoFileSelected"]';
            }
        });
    }

        function getAttachments(maidId) {
          document.getElementById('attachmentMaidId').value = maidId;
        $.ajax({
                url: '/Admin/GetAttachments/' + maidId,
            type: 'GET',
                success: function (attachments) {
                    populateAttachments(attachments);
                $('#EditAttachments').modal('show');
            },
            error: function () {
                // alert('Failed to load attachments.');
            }
        });
    }

</script>
