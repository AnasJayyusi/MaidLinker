@model IEnumerable<MaidLinker.Data.Entites.Request>
@using Microsoft.AspNetCore.Mvc.Localization
@using MaidLinker.Data
@using System.Globalization
@inject IViewLocalizer Localizer

@{
    string cultureCode = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    string direction = cultureCode.StartsWith("ar", StringComparison.OrdinalIgnoreCase) ? "rtl" : "ltr";
    string textAlign = direction == "rtl" ? "right" : "left";
    bool isEng = cultureCode.StartsWith("en", StringComparison.OrdinalIgnoreCase);
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Localizer["RequestNumber"]</th>
            <th>@Localizer["ClientName"]</th>
            <th>@Localizer["Phone"]</th>
            <th>@Localizer["RequestDate"]</th>
            <th>@Localizer["Status"]</th>
            <th>@Localizer["ContractSigned"]</th>
            <th>@Localizer["Actions"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var request in Model)
        {
            <tr>
                <td>#@request.Id</td>
                <td>@request.Name</td>
                <td>@request.Phone</td>
                <td>@request.RequestDateFormatted</td>
                <td>
                    @if (request.Status == MaidLinker.Enums.SharedEnum.RequestStatus.Prepared)
                    {
                        <span class="badge bg-info">@Localizer["Prepared"]</span>
                    }
                    else if (request.Status == MaidLinker.Enums.SharedEnum.RequestStatus.Completed)
                    {
                        <span class="badge bg-success">@Localizer["Completed"]</span>
                    }
                </td>
                <td class="text-center align-middle">
                    @if (request.ContractSigned)
                    {
                        <i class="fas fa-signature text-info"
                           style="font-size: 1.5rem;"
                           title="@Localizer["SignedOn"] @request.SignedDateFormatted"></i>
                    }
                    else
                    {
                        <text>-</text>
                    }
                </td>
                <td style="display: flex; align-items: center; gap: 1rem; flex-wrap: wrap;">

                    <!-- الأزرار -->
                    <button class="btn btn-sm btn-warning" onclick="openAttachmentModal(@request.Id, '@request.ContractFilePath')">
                        <i class="fas fa-paperclip"></i> @Localizer["Attach"]
                    </button>

                    <button class="btn btn-sm btn-info" onclick="window.open('@Url.Action("Invoice", "Admin", new { id = request.Id })', '_blank')">
                        <i class="fas fa-print"></i> @Localizer["Print"]
                    </button>

                    <!-- الحقول القابلة للتعديل -->
                    <div style="display: flex; gap: 0.8rem; font-size: 0.9rem; font-weight: 600; align-items: center;">
                        <label style="color: #007bff; white-space: nowrap;">الإجمالي:</label>
                        <input type="number" step="10" value="@request.TotalAmount.ToString(CultureInfo.InvariantCulture)"
                               id="totalAmount-@request.Id" style="width: 80px; padding: 2px 5px; border: 1px solid #ccc; border-radius: 3px;" />
                    </div>

                    <div style="display: flex; gap: 0.8rem; font-size: 0.9rem; font-weight: 600; align-items: center;">
                        <label style="color: #28a745; white-space: nowrap;">المدفوع:</label>
                        <input type="number" step="10" value="@request.AmountPaid.ToString(CultureInfo.InvariantCulture)"
                               id="amountPaid-@request.Id" style="width: 80px; padding: 2px 5px; border: 1px solid #ccc; border-radius: 3px;" />
                    </div>

                    <div style="color: #dc3545; font-weight: 600; white-space: nowrap;">
                        المتبقي: <span id="amountLeft-@request.Id">@request.AmountLeft</span>
                    </div>

                    <button class="btn btn-sm btn-success" onclick="saveAmounts(@request.Id)" title="حفظ التغييرات">
                        حفظ
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Attachment Modal -->
<div class="modal fade" id="attachmentModal" tabindex="-1" role="dialog" aria-labelledby="attachmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <!-- Centered modal -->
        <div class="modal-content">
            <div class="modal-header text-white">
                <h5 class="modal-title" id="attachmentModalLabel">@Localizer["UploadViewContract"]</h5>
                <button type="button" class="close-btn" style="border:none" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="attachmentForm" enctype="multipart/form-data">
                    <input type="hidden" id="modalRequestId" name="requestId" />
                    <div class="form-group">
                        <label class="font-weight-bold">@Localizer["SelectContractFile"]</label>
                        <div class="custom-file">
                            <input type="file" name="contractFile" class="custom-file-input" id="contractFileInput" required />
                            <label class="custom-file-label" for="contractFileInput">@Localizer["ChooseFile"]</label>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <button type="submit" class="btn btn-success" id="uploadButton">
                            <i class="fas fa-upload"></i> @Localizer["UploadContract"]
                        </button>
                        <a id="viewContractLink" href="#" target="_blank" class="btn btn-info" style="display:none;">
                            <i class="fas fa-eye"></i> @Localizer["ViewCurrentContract"]
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
        function updateAmountLeft(requestId) {
      const total = parseFloat(document.getElementById(`totalAmount-${requestId}`).value) || 0;
      const paid = parseFloat(document.getElementById(`amountPaid-${requestId}`).value) || 0;
      const left = total - paid;
      document.getElementById(`amountLeft-${requestId}`).textContent = left.toFixed(2);
    }

    document.querySelectorAll('input[id^="totalAmount-"], input[id^="amountPaid-"]').forEach(input => {
      input.addEventListener('input', () => {
        const idParts = input.id.split('-');
        const requestId = idParts[1];
        updateAmountLeft(requestId);
      });
    });

        function saveAmounts(requestId) {
      const totalAmount = parseFloat(document.getElementById(`totalAmount-${requestId}`).value) || 0;
      const amountPaid = parseFloat(document.getElementById(`amountPaid-${requestId}`).value) || 0;

      fetch('/Admin/UpdateAmounts', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ requestId, totalAmount, amountPaid })
      })
      .then(res => {
        if (!res.ok) showErrorMessage();
        return res.json();
      })
      .then(data => {
        document.getElementById(`amountLeft-${requestId}`).textContent = data.amountLeft.toFixed(2);
      showSuccessMessage()
      })
      .catch(err => alert(err.message));
    }
</script>